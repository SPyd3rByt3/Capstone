# Generated by Django 5.0 on 2025-05-12 21:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Model Name')),
                ('provider', models.CharField(choices=[('openai', 'OpenAI'), ('anthropic', 'Anthropic'), ('internal', 'Internal'), ('other', 'Other')], max_length=20, verbose_name='Provider')),
                ('model_identifier', models.CharField(max_length=100, verbose_name='Model Identifier')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('default_temperature', models.FloatField(default=0.7, verbose_name='Default Temperature')),
                ('default_max_tokens', models.PositiveIntegerField(default=1000, verbose_name='Default Max Tokens')),
            ],
            options={
                'verbose_name': 'AI Model',
                'verbose_name_plural': 'AI Models',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PromptTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Template Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('prompt_text', models.TextField(verbose_name='Prompt Text')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_public', models.BooleanField(default=False, verbose_name='Is Public')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prompt_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prompt Template',
                'verbose_name_plural': 'Prompt Templates',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIContentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(choices=[('generation', 'Content Generation'), ('enhancement', 'Content Enhancement'), ('editing', 'Content Editing'), ('summarization', 'Summarization'), ('translation', 'Translation'), ('other', 'Other')], max_length=20, verbose_name='Request Type')),
                ('prompt', models.TextField(verbose_name='Prompt')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20, verbose_name='Status')),
                ('temperature', models.FloatField(default=0.7, verbose_name='Temperature')),
                ('max_tokens', models.PositiveIntegerField(default=1000, verbose_name='Max Tokens')),
                ('response_text', models.TextField(blank=True, verbose_name='Response Text')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('token_count_input', models.PositiveIntegerField(default=0, verbose_name='Input Token Count')),
                ('token_count_output', models.PositiveIntegerField(default=0, verbose_name='Output Token Count')),
                ('processing_time_ms', models.PositiveIntegerField(default=0, verbose_name='Processing Time (ms)')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_requests', to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_requests', to=settings.AUTH_USER_MODEL)),
                ('ai_model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requests', to='AI.aimodel')),
                ('prompt_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_requests', to='AI.prompttemplate')),
            ],
            options={
                'verbose_name': 'AI Content Request',
                'verbose_name_plural': 'AI Content Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIContentFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, 'Poor'), (2, 'Fair'), (3, 'Good'), (4, 'Very Good'), (5, 'Excellent')], verbose_name='Rating')),
                ('comment', models.TextField(blank=True, verbose_name='Comment')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_feedback', to=settings.AUTH_USER_MODEL)),
                ('ai_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='AI.aicontentrequest')),
            ],
            options={
                'verbose_name': 'AI Content Feedback',
                'verbose_name_plural': 'AI Content Feedback',
                'ordering': ['-created_at'],
                'unique_together': {('ai_request', 'user')},
            },
        ),
    ]
