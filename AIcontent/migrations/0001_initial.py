# Generated by Django 5.0 on 2025-05-12 21:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'tag',
                'verbose_name_plural': 'tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ContentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='AIcontent.contentcategory')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('slug', models.SlugField(unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='content_images/')),
                ('content_body', models.TextField(verbose_name='content body')),
                ('content_json', models.JSONField(blank=True, default=dict, verbose_name='content JSON')),
                ('ai_generated', models.BooleanField(default=False, verbose_name='AI generated')),
                ('ai_prompted', models.BooleanField(default=False, verbose_name='AI prompted')),
                ('ai_prompt', models.TextField(blank=True, verbose_name='AI prompt')),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('REVIEW', 'In Review'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], default='DRAFT', max_length=10)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('PRIVATE', 'Private'), ('SHARED', 'Shared')], default='PRIVATE', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('published_at', models.DateTimeField(blank=True, null=True, verbose_name='published at')),
                ('view_count', models.PositiveIntegerField(default=0, verbose_name='view count')),
                ('engagement_score', models.FloatField(default=0.0, verbose_name='engagement score')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='content_items', to='AIcontent.contentcategory')),
            ],
            options={
                'verbose_name': 'content',
                'verbose_name_plural': 'content',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ContentCollaborator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('EDITOR', 'Editor'), ('REVIEWER', 'Reviewer'), ('VIEWER', 'Viewer')], default='VIEWER', max_length=10)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AIcontent.content')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('content', 'user')},
            },
        ),
        migrations.AddField(
            model_name='content',
            name='collaborators',
            field=models.ManyToManyField(related_name='collaborative_content', through='AIcontent.ContentCollaborator', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ContentComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('selection_start', models.PositiveIntegerField(blank=True, null=True)),
                ('selection_end', models.PositiveIntegerField(blank=True, null=True)),
                ('selected_text', models.TextField(blank=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='AIcontent.content')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='AIcontent.contentcomment')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='content',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='content_items', to='AIcontent.tag'),
        ),
        migrations.CreateModel(
            name='ContentVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_number', models.PositiveIntegerField()),
                ('content_body', models.TextField()),
                ('content_json', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.TextField(blank=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='AIcontent.content')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-version_number'],
                'unique_together': {('content', 'version_number')},
            },
        ),
    ]
